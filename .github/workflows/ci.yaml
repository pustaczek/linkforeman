name: Continuous Integration
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
env:
  CARGO_TERM_COLOR: always
jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: cargo build --all
      - name: Test
        run: cargo test --all
  Format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Format
        run: cargo fmt --all -- --check
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Lint
        run: cargo clippy --all -- -D warnings
  Coverage:
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: 0
      RUSTFLAGS: -Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort
      RUSTDOCFLAGS: -Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust nightly
        run: rustup default nightly
      - name: Install grcov
        run: curl -L https://github.com/mozilla/grcov/releases/download/v0.5.15/grcov-linux-x86_64.tar.bz2 | tar jxf -
      - name: Build
        run: cargo build --all
      - name: Test
        run: cargo test --all
      - name: Generate coverage report
        run: ./grcov ./target/debug/ -s . -t lcov --llvm --ignore-not-existing --ignore "/*" -o lcov.info
      - name: Send coverage report
        run: bash <(curl -s https://codecov.io/bash) -f lcov.info
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
